{"version":3,"sources":["wheel/index.jsx","index.js"],"names":["Wheel","props","state","selectedItem","selectItem","bind","this","Math","floor","random","items","length","onSelectItem","setState","setTimeout","wheelVars","spinning","className","style","onClick","map","item","index","React","Component","SASHET","SASHET_DESCRIPTION","App","useState","selected","setSelected","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uTAIqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,MAEhB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBALD,E,8CAQnB,WACE,GAAgC,OAA5BC,KAAKJ,MAAMC,aAAuB,CACpC,IAAMA,EAAeI,KAAKC,MAAMD,KAAKE,SAAWH,KAAKL,MAAMS,MAAMC,QAC7DL,KAAKL,MAAMW,cACbN,KAAKL,MAAMW,aAAaT,GAE1BG,KAAKO,SAAS,CAAEV,sBAEhBG,KAAKO,SAAS,CAAEV,aAAc,OAC9BW,WAAWR,KAAKF,WAAY,O,oBAIhC,WACE,IAAQD,EAAiBG,KAAKJ,MAAtBC,aACAO,EAAUJ,KAAKL,MAAfS,MAEFK,EAAY,CAChB,YAAaL,EAAMC,OACnB,kBAAmBR,GAEfa,EAA4B,OAAjBb,EAAwB,WAAa,GAEtD,OACE,qBAAKc,UAAU,kBAAf,SACE,qBACEA,UAAS,gBAAWD,GACpBE,MAAOH,EACPI,QAASb,KAAKF,WAHhB,SAKGM,EAAMU,KAAI,SAACC,EAAMC,GAAP,OACT,qBACEL,UAAU,aAEVC,MAAO,CAAE,YAAaI,GAHxB,SAKGD,GAHIC,c,GA1CgBC,IAAMC,WCGnCC,G,MAAS,CAAC,QAAS,UAAW,SAAU,SAAU,QAAS,QAC3DC,EAAqB,CACzB,oDACA,+CACA,0BACA,wCACA,qBACA,uCAGK,SAASC,IACd,MAAgCJ,IAAMK,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKb,UAAU,MAAf,UACE,qDACA,cAAC,EAAD,CAAOP,MAAOe,EAAQb,aAAckB,IACtB,OAAbD,GAAqB,4BAAIH,EAAmBG,QAKnD,IAAME,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACR,EAAD,IAASI,K","file":"static/js/main.6bf9128c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./index.css\";\n\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: null,\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  selectItem() {\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(selectedItem);\n      }\n      this.setState({ selectedItem });\n    } else {\n      this.setState({ selectedItem: null });\n      setTimeout(this.selectItem, 500);\n    }\n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    const { items } = this.props;\n\n    const wheelVars = {\n      \"--nb-item\": items.length,\n      \"--selected-item\": selectedItem,\n    };\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\n\n    return (\n      <div className=\"wheel-container\">\n        <div\n          className={`wheel ${spinning}`}\n          style={wheelVars}\n          onClick={this.selectItem}\n        >\n          {items.map((item, index) => (\n            <div\n              className=\"wheel-item\"\n              key={index}\n              style={{ \"--item-nb\": index }}\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Wheel from \"./wheel\";\n\nimport \"./styles.css\";\n\nconst SASHET = [\"Happy\", \"Excited\", \"Tender\", \"Scared\", \"Angry\", \"Sad\"];\nconst SASHET_DESCRIPTION = [\n  \"Nourished, Contented, Optimistic, Satisfied, Glad\",\n  \"Enthusiastic, Competitive, Energetic, Active\",\n  \"Sympathetic, Kind, Soft\",\n  \"Nerves, Tensed, Terrified, Frightened\",\n  \"Furious, Irritated\",\n  \"Health Problem, Depressed, Dejected\",\n];\n\nexport function App() {\n  const [selected, setSelected] = React.useState(null);\n\n  return (\n    <div className=\"App\">\n      <h1>Let's talk about...</h1>\n      <Wheel items={SASHET} onSelectItem={setSelected} />\n      {selected !== null && <p>{SASHET_DESCRIPTION[selected]}</p>}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}